package telran.java47.security.filter;

import java.io.IOException;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.core.annotation.Order;
import org.springframework.stereotype.Component;

import lombok.RequiredArgsConstructor;
import telran.java47.accounting.dao.UserAccountRepository;
import telran.java47.accounting.model.UserAccount;


@Component
@Order(20)
@RequiredArgsConstructor
public class AdminFilter implements Filter {

	final UserAccountRepository userAccountRepository;
	
	@Override
	public void doFilter(ServletRequest req, ServletResponse resp, FilterChain chain)
			throws IOException, ServletException {
		HttpServletRequest request = (HttpServletRequest) req;
		HttpServletResponse response = (HttpServletResponse) resp;
		//System.out.println(request.getUserPrincipal().getName());
		UserAccount userAccount = userAccountRepository.findById(request.getUserPrincipal().getName()).orElse(null);
		if (checkEndPoint(request.getMethod(), request.getServletPath())) {
			if(userAccount.getRoles().equals("Administrator"))
			userAccount.getRoles();
			try {
				System.out.println("Enter");
			} catch (Exception e) {
				System.out.println(e);
				response.sendError(401, "token not valid");
				return;
			}
			
		}
		// TODO
		chain.doFilter(request, response);

	}

	private boolean checkEndPoint(String method, String path) {
		return ("PUT".equalsIgnoreCase(method) && path.matches("/account/user/\\w+/role/\\w+"));
	}
}
